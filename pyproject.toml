[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "connect4evolution"
version = "0.1.0"
description = "A comprehensive exploration of reinforcement learning approaches applied to Connect Four, from Q-Learning to AlphaZero"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Patrick Kalkman", email = "patrick@simpletechture.nl"}
]
keywords = ["reinforcement-learning", "deep-learning", "alphazero", "game-ai", "q-learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.24.0",
    "torch>=2.0.0",
    "matplotlib>=3.7.0",
    "pettingzoo>=1.22.0",
    "gymnasium>=0.28.0",
    "tqdm>=4.65.0",
    "pandas>=2.0.0",
    "seaborn>=0.12.0",
]

[project.urls]
"Homepage" = "https://github.com/PatrickKalkman/connect4evolution"
"Bug Tracker" = "https://github.com/PatrickKalkman/connect4evolution/issues"
"Documentation" = "https://github.com/PatrickKalkman/connect4evolution/wiki"

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "ruff>=0.0.262",
    "black>=23.3.0",
    "isort>=5.12.0",
    "pre-commit>=3.3.1",
    "jupyter>=1.0.0",
    "sphinx>=6.1.3",
    "sphinx-rtd-theme>=1.2.0",
]
# MPS (Metal Performance Shaders) acceleration for Mac
apple-silicon = [
    "torch>=2.0.0",  # PyTorch with MPS support
]

[project.scripts]
connect4evolution = "connect4evolution.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["connect4evolution"]

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), isort (`I`)
lint.select = ["E", "F", "I"]
# Allow unused variables when underscore-prefixed
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
# Python version compatibility
target-version = "py311"
# Line length
line-length = 100

# Exclude files/directories from linting
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".gitignore",
    ".DS_Store",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"